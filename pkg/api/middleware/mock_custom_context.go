// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/carverauto/eventrunner/pkg/api/middleware (interfaces: CustomContext)
//
// Generated by this command:
//
//	mockgen -destination=mock_custom_context.go -package=middleware github.com/carverauto/eventrunner/pkg/api/middleware CustomContext
//

// Package middleware is a generated GoMock package.
package middleware

import (
	reflect "reflect"

	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockCustomContext is a mock of CustomContext interface.
type MockCustomContext struct {
	ctrl     *gomock.Controller
	recorder *MockCustomContextMockRecorder
}

// MockCustomContextMockRecorder is the mock recorder for MockCustomContext.
type MockCustomContextMockRecorder struct {
	mock *MockCustomContext
}

// NewMockCustomContext creates a new mock instance.
func NewMockCustomContext(ctrl *gomock.Controller) *MockCustomContext {
	mock := &MockCustomContext{ctrl: ctrl}
	mock.recorder = &MockCustomContextMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomContext) EXPECT() *MockCustomContextMockRecorder {
	return m.recorder
}

// FindAPIKey mocks base method.
func (m *MockCustomContext) FindAPIKey(arg0 string) (uuid.UUID, uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAPIKey", arg0)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(uuid.UUID)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// FindAPIKey indicates an expected call of FindAPIKey.
func (mr *MockCustomContextMockRecorder) FindAPIKey(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAPIKey", reflect.TypeOf((*MockCustomContext)(nil).FindAPIKey), arg0)
}

// GetAPIKey mocks base method.
func (m *MockCustomContext) GetAPIKey() (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIKey")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetAPIKey indicates an expected call of GetAPIKey.
func (mr *MockCustomContextMockRecorder) GetAPIKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIKey", reflect.TypeOf((*MockCustomContext)(nil).GetAPIKey))
}

// SetClaim mocks base method.
func (m *MockCustomContext) SetClaim(arg0 string, arg1 any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetClaim", arg0, arg1)
}

// SetClaim indicates an expected call of SetClaim.
func (mr *MockCustomContextMockRecorder) SetClaim(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetClaim", reflect.TypeOf((*MockCustomContext)(nil).SetClaim), arg0, arg1)
}
