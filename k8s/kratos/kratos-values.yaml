# Default values for kratos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# -- Number of replicas in deployment
replicaCount: 1
## -- Deployment update strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: "25%"
    maxUnavailable: "25%"

image:
  # -- ORY KRATOS image
  repository: oryd/kratos
  # -- ORY KRATOS VERSION
  # Alternative format: image: oryd/kratos:v0.6.3-alpha.1
  tag: v1.3.1
  pullPolicy: IfNotPresent
  # imagePullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
## -- Service definitions
service:
  admin:
    enabled: true
    type: ClusterIP
    # -- Load balancer IP
    loadBalancerIP: ""
    nodePort: ""
    port: 80
    # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
    name: http
    # -- Provide custom labels. Use the same syntax as for annotations.
    labels: {}
    # -- If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- Path to the metrics endpoint
    metricsPath: /admin/metrics/prometheus
  public:
    enabled: true
    type: ClusterIP
    # -- Load balancer IP
    loadBalancerIP: ""
    nodePort: ""
    port: 80
    # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
    name: http
    # -- Provide custom labels. Use the same syntax as for annotations.
    labels: {}
    # -- If you do want to specify annotations, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  courier:
    enabled: true
    type: ClusterIP
    # -- Service Port
    port: 80
    # -- Container Port
    containerPort: 4434
    # -- The service port name. Useful to set a custom service port name if it must follow a scheme (e.g. Istio)
    name: http-metrics
    # -- Provide custom labels. Use the same syntax as for annotations.
    labels: {}
    # -- Provide custom annotations.
    annotations: {}
    # -- Path to the metrics endpoint
    metricsPath: /metrics/prometheus

## -- Secret management
secret:
  # -- switch to false to prevent creating the secret
  enabled: false
  # -- Provide custom name of existing secret, or custom name of secret to be created
  nameOverride: "kratos-secrets"
  # nameOverride: "myCustomSecret"
  # -- Annotations to be added to secret. Annotations are added only when secret is being created. Existing secret will not be modified.
  secretAnnotations:
    # Create the secret before installation, and only then. This saves the secret from regenerating during an upgrade
    # pre-upgrade is needed to upgrade from 0.7.0 to newer. Can be deleted afterwards.
    helm.sh/hook-weight: "0"
    helm.sh/hook: "pre-install, pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/resource-policy: "keep"
  # -- switch to false to prevent checksum annotations being maintained and propogated to the pods
  hashSumEnabled: true

## -- Ingress definition
ingress:
  admin:
    enabled: false
    className: "nginx"
    annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: kratos-admin.threadr.tunnel.ai
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: auth-services-tls
        hosts:
          - kratos-admin.threadr.tunnel.ai
  public:
    enabled: false
    className: "nginx"
      # annotations:
      # nginx.org/rewrites: "serviceName=kratos-public rewrite=/"
    # nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: kratos.tunnel.threadr.ai
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kratos-ui-charts
                port:
                  number: 3000
          - path: /app
            pathType: Prefix
            backend:
              service:
                name: kratos-public
                port:
                  number: 80
    tls:
      - secretName: auth-services-tls
        hosts:
          - "*.tunnel.threadr.ai"

log:
  level: debug
  format: text
  leak_sensitive_values: true
## -- Application specific config
kratos:
  development: false
  # -- Enable the initialization job. Required to work with a DB

  # -- Enables database migration
  automigration:
    annotations:
      sidecar.istio.io/inject: "false"
    enabled: true
    # -- Configure the way to execute database migration. Possible values: job, initContainer
    # When set to job, the migration will be executed as a job on release or upgrade.
    # When set to initContainer, the migration will be executed when Kratos pod is created
    # Defaults to job
    type: job
    # -- Ability to override the entrypoint of the automigration container
    # (e.g. to source dynamic secrets or export environment dynamic variables)
    customCommand: []
    # -- Ability to override arguments of the entrypoint. Can be used in-depended of customCommand
    # eg:
    # - sleep 5;
    #   - kratos
    customArgs: []
    # -- resource requests and limits for the automigration initcontainer
    resources: {}

  # -- You can add multiple identity schemas here. You can pass JSON schema using `--set-file` Helm CLI argument.
  kratos:
    identitySchemas:
      "identity.default.schema.json": |
        {
          "$id": "https://schemas.ory.sh/presets/kratos/identity.email.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Person",
          "type": "object",
          "properties": {
            "traits": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "E-Mail",
                  "ory.sh/kratos": {
                    "credentials": {
                      "password": {
                        "identifier": true
                      },
                      "webauthn": {
                        "identifier": true
                      },
                      "totp": {
                        "account_name": true
                      },
                      "code": {
                        "identifier": true,
                        "via": "email"
                      },
                      "passkey": {
                        "display_name": true
                      }
                    },
                    "recovery": {
                      "via": "email"
                    },
                    "verification": {
                      "via": "email"
                    }
                  },
                  "maxLength": 320
                },
                "tenant_id": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                  "title": "Tenant ID",
                  "description": "The primary tenant this user belongs to"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "user",
                      "superuser"
                    ]
                  },
                  "title": "Roles",
                  "description": "The roles assigned to this user"
                }
              },
              "required": [
                "email"
              ],
              "additionalProperties": true
            }
          }
        } 

  # -- you can customize the emails kratos is sending (also uncomment config.courier.template_override_path below)
  emailtemplates: {}

  config:
    courier:
      smtp:
        connection_uri: smtps://test:test@mailslurper:1025/?skip_ssl_verify=true
    dsn: ""
    serve:
      public:
        base_url: https://kratos.tunnel.threadr.ai/app
        port: 4433
      admin:
        base_url: https://kratos-admin.tunnel.threadr.ai
        port: 4434

    secrets: {}
    selfservice:
      default_browser_return_url: https://kratos.tunnel.threadr.ai/
      allowed_return_urls:
        - https://kratos.tunnel.threadr.ai/
      flows:
        error:
          ui_url: https://kratos.tunnel.threadr.ai/error
        login:
          ui_url: https://kratos.tunnel.threadr.ai/login

        verification:
          enabled: true
          ui_url: https://kratos.tunnel.threadr.ai/verification
        registration:
          ui_url: https://kratos.tunnel.threadr.ai/registration
        settings:
          ui_url: https://kratos.tunnel.threadr.ai/settings

      methods:
        oidc:
          config:
            providers:
              - id: github
                provider: github
                client_id: "{{ .Values.client_id }}"
                client_secret: "{{ .Values.client_secret }}"
                issuer_url: https://api.github.com
                mapper_url: "base64://bG9jYWwgY2xhaW1zID0gc3RkLmV4dFZhcignY2xhaW1zJyk7Cgp7CiAgaWRlbnRpdHk6IHsKICAgIHRyYWl0czogewogICAgICBlbWFpbDogY2xhaW1zLmVtYWlsLAogICAgICB1c2VybmFtZTogY2xhaW1zLm5hbWUsCiAgICAgIHRlbmFudF9pZDogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwCiAgICB9LAogIH0sCg=="
                scope:
                  - read:user
                  - user:email
                  - user:tenant_id
                requested_claims:
                  id_token:
                    email:
                      essential: true
                    username:
                      essential: true
                    tenant_id:
                      essential: true
          enabled: true

    session:
      whoami:
        tokenizer:
          templates:
            jwt_example_template:
              jwks_url: http://hydra-admin.auth:4445/admin/keys/hydra.jwt.access-token
              claims_mapper_url: base64://CmxvY2FsIGNsYWltcyA9IHN0ZC5leHRWYXIoJ2NsYWltcycpOwpsb2NhbCBzZXNzaW9uID0gc3RkLmV4dFZhcignc2Vzc2lvbicpOwoKewogIGNsYWltczogewogICAgaXNzOiBjbGFpbXMuaXNzICsgIi9hZGRpdGlvbmFsLWNvbXBvbmVudCIsCiAgICBzY2hlbWFfaWQ6IHNlc3Npb24uaWRlbnRpdHkuc2NoZW1hX2lkLAogICAgc2Vzc2lvbjogc2Vzc2lvbiwKICB9Cn0=
              ttl: 10m


    identity:
      default_schema_id: default
      schemas:
        - id: default
          url: "base64://ewogICAgICAgICAgIiRpZCI6ICJodHRwczovL3NjaGVtYXMub3J5LnNoL3ByZXNldHMva3JhdG9zL2lkZW50aXR5LmVtYWlsLnNjaGVtYS5qc29uIiwKICAgICAgICAgICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgICAgICAgICAidGl0bGUiOiAiUGVyc29uIiwKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgInRyYWl0cyI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgImVtYWlsIjogewogICAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICAgICAiZm9ybWF0IjogImVtYWlsIiwKICAgICAgICAgICAgICAgICAgInRpdGxlIjogIkUtTWFpbCIsCiAgICAgICAgICAgICAgICAgICJvcnkuc2gva3JhdG9zIjogewogICAgICAgICAgICAgICAgICAgICJjcmVkZW50aWFscyI6IHsKICAgICAgICAgICAgICAgICAgICAgICJwYXNzd29yZCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImlkZW50aWZpZXIiOiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgIndlYmF1dGhuIjogewogICAgICAgICAgICAgICAgICAgICAgICAiaWRlbnRpZmllciI6IHRydWUKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAidG90cCI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImFjY291bnRfbmFtZSI6IHRydWUKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgImlkZW50aWZpZXIiOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAidmlhIjogImVtYWlsIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICJwYXNza2V5IjogewogICAgICAgICAgICAgICAgICAgICAgICAiZGlzcGxheV9uYW1lIjogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgInJlY292ZXJ5IjogewogICAgICAgICAgICAgICAgICAgICAgInZpYSI6ICJlbWFpbCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJ2ZXJpZmljYXRpb24iOiB7CiAgICAgICAgICAgICAgICAgICAgICAidmlhIjogImVtYWlsIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgIm1heExlbmd0aCI6IDMyMAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJ0ZW5hbnRfaWQiOiB7CiAgICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgICAgICJwYXR0ZXJuIjogIl5bMC05YS1mQS1GXXs4fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXsxMn0kIiwKICAgICAgICAgICAgICAgICAgInRpdGxlIjogIlRlbmFudCBJRCIsCiAgICAgICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcHJpbWFyeSB0ZW5hbnQgdGhpcyB1c2VyIGJlbG9uZ3MgdG8iCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgInJvbGVzIjogewogICAgICAgICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgICAgICAgImFkbWluIiwKICAgICAgICAgICAgICAgICAgICAgICJ1c2VyIiwKICAgICAgICAgICAgICAgICAgICAgICJzdXBlcnVzZXIiCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAidGl0bGUiOiAiUm9sZXMiLAogICAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHJvbGVzIGFzc2lnbmVkIHRvIHRoaXMgdXNlciIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgICAgICJlbWFpbCIKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0g"

    oauth2_provider:
      url: http://hydra-admin.auth:4445
## -- configuration options for the k8s deployment
deployment:
  lifecycle: {}
  # -- configure the livenessprobe parameters
  livenessprobe:
    initialdelayseconds: 5
    periodseconds: 10
    failurethreshold: 5
  # -- configure the readinessprobe parameters
  readinessprobe:
    initialdelayseconds: 5
    periodseconds: 10
    failurethreshold: 5
  # -- configure the startupprobe parameters
  startupprobe:
    failurethreshold: 60
    successthreshold: 1
    periodseconds: 1
    timeoutseconds: 1

  # -- configure a custom livenessprobe. this overwrites the default object
  customlivenessprobe: {}
  # -- configure a custom readinessprobe. this overwrites the default object
  customreadinessprobe: {}
  # -- configure a custom startupprobe. this overwrites the default object
  customstartupprobe: {}

  # -- array of extra arguments to be passed down to the deployment. kubernetes args format is expected
  # - --foo
  # - --sqa-opt-out
  extraargs: []

  # -- array of extra envs to be passed to the deployment. kubernetes format is expected
  # - name: foo
  #   value: bar
  extraenv:
    - name: DSN
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: dsn
    - name: SMTP
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: smtp_uri
    - name: GITHUB_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: github_client_id
    - name: GITHUB_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: github_client_secret
  # -- if you want to mount external volume
  # for example, mount a secret containing certificate root ca to verify database
  # tls connection.
  extravolumes: []
  # - name: my-volume
  #   secret:
  #     secretname: my-secret
  extravolumemounts: []
  # - name: my-volume
  #   mountpath: /etc/secrets/my-secret
  #   readonly: true

  # extravolumes:
  #   - name: postgresql-tls
  #     secret:
  #       secretname: postgresql-root-ca
  # extravolumemounts:
  #   - name: postgresql-tls
  #     mountpath: "/etc/postgresql-tls"
  #     readonly: true

  # -- if you want to add extra init containers. these are processed before the migration init container.
  extrainitcontainers: ""
  # extrainitcontainers: |
  #  - name: ...
  #    image: ...

  # -- if you want to add extra sidecar containers.
  extracontainers: ""
  # extracontainers: |
  #  - name: ...
  #    image: ...

  # -- set desired resource parameters
  #  we usually recommend not to specify default resources and to leave this as a conscious
  #  choice for the user. this also increases chances charts run on environments with little
  #  resources, such as minikube. if you do want to specify resources, uncomment the following
  #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128mi
  #  requests:
  #    cpu: 100m
  #  memory: 128mi

  # -- pod priority
  # https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  priorityclassname: ""

  # -- node labels for pod assignment.
  nodeselector: {}
  # if you do want to specify node labels, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'nodeselector:'.
  #   foo: bar

  # -- configure node tolerations.
  tolerations: []

  # -- configure node affinity
  affinity: {}

  # -- configure pod topologyspreadconstraints.
  topologyspreadconstraints: []
  # - maxskew: 1
  #   topologykey: topology.kubernetes.io/zone
  #   whenunsatisfiable: donotschedule
  #   labelselector:
  #     matchlabels:
  #       app.kubernetes.io/name: kratos
  #       app.kubernetes.io/instance: kratos

  # -- configure pod dnsconfig.
  dnsconfig: {}
  #   options:
  #     - name: "ndots"
  #       value: "1"

  labels: {}
  #      if you do want to specify additional labels, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
  #      e.g.  type: app

  annotations:
    sidecar.istio.io/inject: "true"
    traffic.sidecar.istio.io/includeOutboundPorts: "5432"

  #      if you do want to specify annotations, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #      e.g.  sidecar.istio.io/rewriteapphttpprobers: "true"

  # -- the secret specified here will be used to load environment variables with envfrom.
  # this allows arbitrary environment variables to be provided to the application which is useful for
  # sensitive values which should not be in a configmap.
  # this secret is not created by the helm chart and must already exist in the namespace.
  # https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables
  # environmentsecretsname:

  # -- specify the serviceaccountname value.
  # in some situations it is needed to provide specific permissions to kratos deployments.
  # like for example installing kratos on a cluster with a possecuritypolicy and istio.
  # uncomment if it is needed to provide a serviceaccount for the kratos deployment.
  serviceaccount:
    # -- specifies whether a service account should be created
    create: true
    # -- annotations to add to the service account
    annotations: {}
    # -- the name of the service account to use. if not set and create is true, a name is generated using the fullname template
    name: ""

  automountserviceaccounttoken: false

  terminationgraceperiodseconds: 60

  # -- specify pod metadata, this metadata is added directly to the pod, and not higher objects
  podmetadata:
    # -- extra pod level labels
    labels: {}
    # -- extra pod level annotations
    annotations: {}

  # -- parameters for the automigration initcontainer
  automigration:
    # -- array of extra envs to be passed to the initcontainer. kubernetes format is expected
    # - name: foo
    #   value: bar
    extraenv:
      - name: DSN
        valueFrom:
          secretKeyRef:
            name: kratos-secrets
            key: dsn
      - name: SMTP
        valueFrom:
          secretKeyRef:
            name: kratos-secrets
            key: smtp_uri
      - name: GITHUB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: kratos-secrets
            key: github_client_id
      - name: GITHUB_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: kratos-secrets
            key: github_client_secret
  # -- number of revisions kept in history
  revisionhistorylimit: 5

  ## -- pod level security context
  podsecuritycontext:
    fsgroupchangepolicy: "onrootmismatch"
    runasnonroot: true
    runasuser: 65534
    fsgroup: 65534
    runasgroup: 65534
    seccompprofile:
      type: runtimedefault

## -- configuration options for the k8s statefulset
statefulset:
  resources: {}
  #  we usually recommend not to specify default resources and to leave this as a conscious
  #  choice for the user. this also increases chances charts run on environments with little
  #  resources, such as minikube. if you do want to specify resources, uncomment the following
  #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #  limits:
  #    cpu: 100m
  #    memory: 128mi
  #  requests:
  #    cpu: 100m
  #  memory: 128mi

  # -- array of extra arguments to be passed down to the statefulset. kubernetes args format is expected
  extraargs: []
  # - --foo
  # - --sqa-opt-out

  extraenv:
    - name: DSN
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: dsn
    - name: SMTP
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: smtp_uri
    - name: GITHUB_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: github_client_id
    - name: GITHUB_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: github_client_secret
  # -- if you want to mount external volume
  # for example, mount a secret containing certificate root ca to verify database
  # tls connection.
  extravolumes: []
  # - name: my-volume
  #   secret:
  #     secretname: my-secret
  extravolumemounts: []
  # - name: my-volume
  #   mountpath: /etc/secrets/my-secret
  #   readonly: true

  # -- if you want to add extra init containers. these are processed before the migration init container.
  extrainitcontainers: ""
  # extrainitcontainers: |
  #  - name: ...
  #    image: ...

  # -- if you want to add extra sidecar containers.
  extracontainers: ""
  # extracontainers: |
  #  - name: ...
  #    image: ...

  annotations: {}
  #      if you do want to specify annotations, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  #      e.g.  sidecar.istio.io/rewriteapphttpprobers: "true"

  # -- the secret specified here will be used to load environment variables with envfrom.
  # this allows arbitrary environment variables to be provided to the application which is useful for
  # sensitive values which should not be in a configmap.
  # this secret is not created by the helm chart and must already exist in the namespace.
  # https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#configure-all-key-value-pairs-in-a-secret-as-container-environment-variables
  # environmentsecretsname:

  labels: {}
  #      if you do want to specify additional labels, uncomment the following
  #      lines, adjust them as necessary, and remove the curly braces after 'labels:'.
  #      e.g.  type: app

  # -- pod priority
  # https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  priorityclassname: ""

  # -- node labels for pod assignment.
  nodeselector: {}
  # if you do want to specify node labels, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'nodeselector:'.
  #   foo: bar

  # -- configure node tolerations.
  tolerations: []

  # -- configure node affinity
  affinity: {}

  # -- configure pod topologyspreadconstraints.
  topologyspreadconstraints: []
  # - maxskew: 1
  #   topologykey: topology.kubernetes.io/zone
  #   whenunsatisfiable: donotschedule
  #   labelselector:
  #     matchlabels:
  #       app.kubernetes.io/name: kratos
  #       app.kubernetes.io/instance: kratos

  # -- configure pod dnsconfig.
  dnsconfig: {}
  #   options:
  #     - name: "ndots"
  #       value: "1"

  log:
    format: json
    level: trace

    # -- specify pod metadata, this metadata is added directly to the pod, and not higher objects
  podmetadata:
    # -- extra pod level labels
    labels: {}
    # -- extra pod level annotations
    annotations: {}
  # -- number of revisions kept in history
  revisionhistorylimit: 5

  terminationgraceperiodseconds: 60

  ## -- pod level security context
  podsecuritycontext:
    fsgroupchangepolicy: "onrootmismatch"
    runasnonroot: true
    runasuser: 65534
    fsgroup: 65534
    runasgroup: 65534
    seccompprofile:
      type: runtimedefault

## -- container level security context
securitycontext:
  capabilities:
    drop:
      - all
  readonlyrootfilesystem: true
  runasnonroot: true
  runasuser: 65534
  runasgroup: 65534
  allowprivilegeescalation: false
  privileged: false
  seccompprofile:
    type: runtimedefault
  selinuxoptions:
    level: "s0:c123,c456"

## -- horizontal pod autoscaling configuration
autoscaling:
  enabled: false
  minreplicas: 1
  maxreplicas: 3
  targetcpu: {}
  #   type: utilization
  #   averageutilization: 80
  targetmemory: {}
  #   type: utilization
  #   averageutilization: 80
  # -- set custom behavior
  # https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#configurable-scaling-behavior
  behavior: {}

## -- values for initialization job
job:
  # -- if you do want to specify annotations, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  annotations:
    helm.sh/hook-weight: "1"
    helm.sh/hook: "pre-install, pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
    sidecar.istio.io/inject: "false"  # Disable Istio for the job
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"

  # -- if you want to add extra sidecar containers.
  extracontainers: ""
  # extracontainers: |
  #  - name: ...
  #    image: ...

  # -- if you want to add extra init containers.
  extrainitcontainers: ""
  # extrainitcontainers: |
  #  - name: ...
  #    image: ...

  # -- array of extra envs to be passed to the job. this takes precedence over deployment variables. kubernetes format is expected
  # - name: foo
  #   value: bar
  extraenv:
    - name: DSN
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: dsn
    - name: SMTP
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: smtp_uri
    - name: GITHUB_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: github_client_id
    - name: GITHUB_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: kratos-secrets
          key: github_client_secret
    - name: KRATOS_LOG_LEVEL
      value: "trace"
    - name: KRATOS_LOG_FORMAT
      value: "json"

  # -- node labels for pod assignment.
  nodeselector: {}
  # if you do want to specify node labels, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'nodeselector:'.
  #   foo: bar

  # -- resource requests and limits for the job
  resources: {}

  # -- configure node tolerations.
  tolerations: []

  # -- if you want to add lifecycle hooks.
  lifecycle: ""
  # lifecycle: |
  #   prestop:
  #     exec:
  #       command: [...]

  # -- set automounting of the sa token
  automountserviceaccounttoken: false

  # -- set sharing process namespace
  shareprocessnamespace: false

  # -- specify the serviceaccountname value.
  # in some situations it is needed to provide specific permissions to kratos deployments
  # like for example installing kratos on a cluster with a possecuritypolicy and istio.
  # uncomment if it is needed to provide a serviceaccount for the kratos deployment.
  serviceaccount:
    # -- specifies whether a service account should be created
    create: true
    # -- annotations to add to the service account
    annotations:
      helm.sh/hook-weight: "0"
      helm.sh/hook: "pre-install, pre-upgrade"
      helm.sh/hook-delete-policy: "before-hook-creation"
    # -- the name of the service account to use. if not set and create is true, a name is generated using the fullname template
    name: ""

  # -- specify pod metadata, this metadata is added directly to the pod, and not higher objects
  podmetadata:
    # -- extra pod level labels
    labels: {}
    # -- extra pod level annotations
    annotations: {}

  spec:
    # -- set job back off limit
    backofflimit: 10

# -- configuration of the courier
courier:
  enabled: true

## -- configuration of the watcher sidecar
watcher:
  enabled: false
  image: oryd/k8s-toolbox:0.0.5
  # -- path to mounted file, which wil be monitored for changes. eg: /etc/secrets/my-secret/foo
  mountfile: ""
  # -- specify pod metadata, this metadata is added directly to the pod, and not higher objects
  podmetadata:
    # -- extra pod level labels
    labels: {}
    # -- extra pod level annotations
    annotations: {}
  # -- label key used for managing applications
  watchlabelkey: "ory.sh/watcher"
  # -- number of revisions kept in history
  revisionhistorylimit: 5
  automountserviceaccounttoken: true
  resources: {}

# -- sql cleanup cron job configuration
cleanup:
  # -- enable cleanup of stale database rows by periodically running the cleanup sql command
  enabled: false

  # -- configure how many records are cleaned per run
  batchsize: 100

  # -- configure how long to wait between each table cleanup
  sleeptables: 1m0s

  # -- configure the youngest records to keep
  keeplast: 6h

## -- cronjob configuration
cronjob:
  cleanup:
    # -- configure how often the cron job is ran
    schedule: "0 */1 * * *"

    # -- configure the arguments of the entrypoint, overriding the default value
    customargs: []

    # -- array of extra envs to be passed to the cronjob. this takes precedence over deployment variables. kubernetes format is expected
    # - name: foo
    #   value: bar
    extraenv:
      - name: DSN
        valueFrom:
          secretKeyRef:
            name: kratos-secrets
            key: dsn
      - name: SMTP
        valueFrom:
          secretKeyRef:
            name: kratos-secrets
            key: smtp_uri
      - name: GITHUB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: kratos-secrets
            key: github_client_id
      - name: GITHUB_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: kratos-secrets
            key: github_client_secret

    # -- set custom cron job level labels
    labels: {}

    # -- set custom cron job level annotations
    annotations: {}

    # -- specify pod metadata, this metadata is added directly to the pod, and not higher objects
    podmetadata:
      # -- extra pod level labels
      labels: {}

      # -- extra pod level annotations
      annotations: {}

    # -- configure node labels for pod assignment
    nodeselector: {}

    # -- configure node tolerations
    tolerations: []

    # -- configure node affinity
    affinity: {}

    # -- we usually recommend not to specify default resources and to leave this as a conscious choice for the user.
    #  this also increases chances charts run on environments with little
    #  resources, such as minikube. if you do want to specify resources, uncomment the following
    #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    #  limits:
    #    cpu: 100m
    #    memory: 128mi
    #  requests:
    #    cpu: 100m
    #  memory: 128mi
    resources:
      limits: {}
      requests: {}

## -- poddistributionbudget configuration
pdb:
  enabled: false
  spec:
    minavailable: ""
    maxunavailable: ""

## -- parameters for the prometheus servicemonitor objects.
# reference: https://docs.openshift.com/container-platform/4.6/rest_api/monitoring_apis/servicemonitor-monitoring-coreos-com-v1.html
servicemonitor:
  # -- switch to true to enable creating the servicemonitor
  enabled: false
  # -- http scheme to use for scraping.
  scheme: http
  # -- interval at which metrics should be scraped
  scrapeinterval: 60s
  # -- timeout after which the scrape is ended
  scrapetimeout: 30s
  # -- provide additional labels to the servicemonitor ressource metadata
  labels: {}
  # -- tls configuration to use when scraping the endpoint
  tlsconfig: {}

configmap:
  # -- switch to false to prevent checksum annotations being maintained and propogated to the pods
  hashsumenabled: true
  # -- if you do want to specify annotations for configmap, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'annotations:'.
  annotations: {}

test:
  # -- use a busybox image from another repository
  busybox:
    repository: busybox
    tag: 1