apiVersion: v1
kind: ConfigMap
metadata:
  name: oathkeeper-rules-data
  namespace: eventrunner
data:
  rules.json: |
    [
        {
        "id": "allow-anonymous-with-header-mutator",
        "version": "v0.40.7",
        "upstream": {
          "url": "https://httpbin.org/anything/header"
        },
        "match": {
          "url": "http://oathkeeper-proxy.default.svc.cluster.local:4455/anything/header",
          "methods": [
            "GET"
          ]
        },
        "authenticators": [
          {
            "handler": "anonymous"
          }
        ],
        "authorizer": {
          "handler": "allow"
        },
        "mutators": [
          {
            "handler": "header",
            "config": {
              "headers": {
                "X-User": "{{ print .Subject }}"
              }
            }
          }
        ]
      },
      {
        "id": "well-known",
        "version": "v0.40.7",
        "upstream": {
          "url": "http://eventrunner-api.eventrunner.svc.cluster.local:8200/.well-known/alive"
        },
        "match": {
          "url": "http://oathkeeper-proxy.default.svc.cluster.local:4455/.well-known/alive",
          "methods": [
            "GET"
          ]
        },
        "authenticators": [
          {
            "handler": "anonymous"
          }
        ],
        "authorizer": {
          "handler": "allow"
        },
        "mutators": [
          {
            "handler": "header",
            "config": {
              "headers": {
                "X-User": "{{ print .Subject }}"
              }
            }
          }
        ]
      },
      {
        "id": "deny-anonymous",
        "version": "v0.40.7",
        "upstream": {
          "url": "https://httpbin.org/anything/deny"
        },
        "match": {
          "url": "http://oathkeeper-proxy.default.svc.cluster.local:4455/anything/deny",
          "methods": [
            "GET"
          ]
        },
        "authenticators": [
          {
            "handler": "anonymous"
          }
        ],
        "authorizer": {
          "handler": "deny"
        },
        "mutators": [
          {
            "handler": "noop"
          }
        ],
        "errors": [
          {
            "handler": "json",
            "config": {
              "when": [
                {
                  "request": {
                    "header": {
                      "accept": ["application/json"]
                    }
                  }
                }
              ]
            }
          },
          {
            "handler": "redirect",
            "config": {
              "when": [
                {
                  "request": {
                    "header": {
                      "accept": ["text/*"]
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      {
        "id": "allow-anonymous-with-id-token-mutator",
        "version": "v0.40.7",
        "upstream": {
          "url": "https://httpbin.org/anything/id_token"
        },
        "match": {
          "url": "http://oathkeeper-proxy.default.svc.cluster.local:4455/anything/id_token",
          "methods": [
            "GET"
          ]
        },
        "authenticators": [
          {
            "handler": "anonymous"
          }
        ],
        "authorizer": {
          "handler": "allow"
        },
        "mutators": [
          {
            "handler": "id_token"
          }
        ]
      }, 
      {
        "id": "oathkeeper-health",
        "upstream": {
          "preserve_host": true,
          "url": "http://oathkeeper-proxy.default.svc.cluster.local:4455"
        },
        "match": {
          "url": "http://oathkeeper-proxy.default.svc.cluster.local:4455/health/alive",
          "methods": ["GET"]
        },
        "authenticators": [
          {
            "handler": "noop"
          }
        ],
        "authorizer": {
          "handler": "allow"
        },
        "mutators": [
          {
            "handler": "noop"
          }
        ]
      },
      {
        "id": "api-health",
        "upstream": {
          "preserve_host": true,
          "url": "http://eventrunner-api.eventrunner.svc.cluster.local:8200"
        },
        "match": {
          "url": "<http[s]?://.*:?[0-9]*/.well-known/health>",
          "methods": ["GET"]
        },
        "authenticators": [
          {
            "handler": "anonymous"
          }
        ],
        "authorizer": {
          "handler": "allow"
        },
        "mutators": [
          {
            "handler": "noop"
          }
        ]
      },
      {
        "id": "test-decisions",
        "upstream": {
          "preserve_host": true,
          "url": "http://eventrunner-api.eventrunner.svc.cluster.local:8200"
        },
        "match": {
          "url": "<https?:\\/\\/.*\\/decisions>",
          "methods": ["GET"]
        },
        "authenticators": [
          {
            "handler": "anonymous"
          }
        ],
        "authorizer": {
          "handler": "allow"
        },
        "mutators": [
          {
            "handler": "noop"
          }
        ]
      },
      {
        "id": "decisions-endpoint",
        "upstream": {
          "preserve_host": true,
          "url": "http://eventrunner-api.eventrunner.svc.cluster.local:8200"
        },
        "match": {
          "url": "http://oathkeeper-api.default.svc.cluster.local:4456/decisions",
          "methods": ["GET", "POST", "PUT", "DELETE", "PATCH"]
        },
        "authenticators": [
          {
            "handler": "jwt",
            "config": {
              "jwks_urls": ["https://affectionate-brattain-fl0yahcycw.projects.oryapis.com/.well-known/jwks.json"],
              "trusted_issuers": ["https://affectionate-brattain-fl0yahcycw.projects.oryapis.com"],
              "target_audience": ["eventrunner"],
              "required_scope": ["eventrunner"]
            }
          }
        ],
        "authorizer": {
          "handler": "allow"
        },
        "mutators": [
          {
            "handler": "header",
            "config": {
              "headers": {
                "X-User": "{{ print .Extra.traits.email }}",
                "X-Tenant-ID": "{{ print .Extra.traits.tenant_id }}",
                "X-Roles": "{{ print .Extra.traits.roles }}",
                "X-Request-Id": "{{ print .RequestID }}"
              }
            }
          }
        ]
      }
    ]