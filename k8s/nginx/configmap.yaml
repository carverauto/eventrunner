apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
data:
  proxy-buffer-size: "16k"
  proxy-headers-hash-max-size: "1024"
  proxy-headers-hash-bucket-size: "128"
  server-snippet: |
    location = /auth {
      internal;
      proxy_pass http://oathkeeper-api.default.svc.cluster.local:4456/decisions;
      proxy_method $request_method;
      proxy_http_version 1.1;
      proxy_connect_timeout 2s;
      proxy_pass_request_body off;
      proxy_set_header Content-Length "";
    
      # Headers for auth request
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Original-Method $request_method;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host:$server_port;
      proxy_set_header X-Forwarded-Uri $request_uri;
    
      # Additional headers that Oathkeeper might need
      proxy_set_header Host $host;
      proxy_set_header Authorization $http_authorization;
    }

  # Move the auth request configuration to configuration-snippet instead
  configuration-snippet: |
    auth_request /auth;
    auth_request_set $auth_status $upstream_status;
    auth_request_set $auth_user $upstream_http_x_user;
    auth_request_set $auth_tenant_id $upstream_http_x_tenant_id;
    auth_request_set $auth_request_id $upstream_http_x_request_id;

    # Forward auth response headers to the backend
    proxy_set_header X-User $auth_user;
    proxy_set_header X-Tenant-ID $auth_tenant_id;
    proxy_set_header X-Request-Id $auth_request_id;